// <auto-generated />
using System;
using Backend_DV_YTe;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_DV_YTe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240513044547_version1")]
    partial class version1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend_DV_YTe.Entity.BacSiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("bangCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenBacSi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BacSi");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTBacSiEntity", b =>
                {
                    b.Property<int>("MaBacSi")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaChuyenKhoa")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MaBacSi", "MaChuyenKhoa");

                    b.HasIndex("MaChuyenKhoa");

                    b.ToTable("CTBacSi");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTMuaThietBiYTeEntity", b =>
                {
                    b.Property<int>("MaThietBiYTe")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("donGia")
                        .HasColumnType("float");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<double>("thanhTien")
                        .HasColumnType("float");

                    b.HasKey("MaThietBiYTe", "MaHoaDon");

                    b.HasIndex("MaHoaDon");

                    b.ToTable("CTMuaThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTMuaThuocEntity", b =>
                {
                    b.Property<int>("MaThuoc")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("NhanVienEntityId")
                        .HasColumnType("int");

                    b.Property<double>("donGia")
                        .HasColumnType("float");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<double>("thanhTien")
                        .HasColumnType("float");

                    b.HasKey("MaThuoc", "MaHoaDon");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("NhanVienEntityId");

                    b.ToTable("CTMuaThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTNhapThietBiYTeEntity", b =>
                {
                    b.Property<int>("MaNhapThietBiYTe")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("MaThietBiYTe")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.HasKey("MaNhapThietBiYTe", "MaThietBiYTe");

                    b.HasIndex("MaThietBiYTe");

                    b.ToTable("CTNhapThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTNhapThuocEntity", b =>
                {
                    b.Property<int>("MaNhapThuoc")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("MaThuoc")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.HasKey("MaNhapThuoc", "MaThuoc");

                    b.HasIndex("MaThuoc");

                    b.ToTable("CTNhapThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTXuatThietBiYTeEntity", b =>
                {
                    b.Property<int>("MaThietBiYTe")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("MaXuatThietBiYTe")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.HasKey("MaThietBiYTe", "MaXuatThietBiYTe");

                    b.HasIndex("MaXuatThietBiYTe");

                    b.ToTable("CTXuatThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTXuatThuocEntity", b =>
                {
                    b.Property<int>("MaThuoc")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaXuatThuoc")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.HasKey("MaThuoc", "MaXuatThuoc");

                    b.HasIndex("MaXuatThuoc");

                    b.ToTable("CTXuatThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ChuyenKhoaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenChuyenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChuyenKhoa");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.DanhGiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaKetQuaDichVu")
                        .HasColumnType("int");

                    b.Property<string>("hinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noiDungDanhGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("soSaoDanhGia")
                        .HasColumnType("float");

                    b.Property<string>("trangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaKetQuaDichVu");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.DichVuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MaChuyenKhoa")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiDichVu")
                        .HasColumnType("int");

                    b.Property<double>("gia")
                        .HasColumnType("float");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaChuyenKhoa");

                    b.HasIndex("MaLoaiDichVu");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.HoaDonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayMua")
                        .HasColumnType("datetime2");

                    b.Property<double>("tongTien")
                        .HasColumnType("float");

                    b.Property<string>("trangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.KetQuaDichVuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaLichHen")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaLichHen");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("KetQuaDichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.KhachHangEntity", b =>
                {
                    b.Property<int>("maKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maKhachHang"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maKhachHang");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LichHenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaBacSi")
                        .HasColumnType("int");

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<string>("diaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("thoiGianDuKien")
                        .HasColumnType("datetime2");

                    b.Property<string>("trangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaBacSi");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("LichHen");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiDichVuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiDichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiThietBiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenLoaiThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiThietBi");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiThuocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("tenLoaiThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhaCungCapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhanVienEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThietBiYTeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaNhaCungCap")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhapThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThuocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaNhaCungCap")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhapThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThanhToanDVEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaLichHen")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("phuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("tongTien")
                        .HasColumnType("float");

                    b.Property<string>("trangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaLichHen");

                    b.ToTable("ThanhToanDV");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThietBiYTeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaLoaiThietBi")
                        .HasColumnType("int");

                    b.Property<double>("donGia")
                        .HasColumnType("float");

                    b.Property<string>("moTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ngayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngaySanXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("nhaSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaLoaiThietBi");

                    b.ToTable("ThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThuocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaLoaiThuoc")
                        .HasColumnType("int");

                    b.Property<double>("donGia")
                        .HasColumnType("float");

                    b.Property<string>("donViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ngayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngaySanXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("nhaSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thanhPhan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaLoaiThuoc");

                    b.ToTable("Thuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThietBiYTeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("XuatThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThuocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimes")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("XuatThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTBacSiEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.BacSiEntity", "BacSi")
                        .WithMany("BacSi")
                        .HasForeignKey("MaBacSi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.ChuyenKhoaEntity", "ChuyenKhoa")
                        .WithMany("CTBacSi")
                        .HasForeignKey("MaChuyenKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("ChuyenKhoa");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTMuaThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.HoaDonEntity", "HoaDon")
                        .WithMany("CTMuaThietBiYTe")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.ThietBiYTeEntity", "ThietBiYTe")
                        .WithMany("CTMuaThietBiYTe")
                        .HasForeignKey("MaThietBiYTe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("ThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTMuaThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.HoaDonEntity", "HoaDon")
                        .WithMany("CTMuaThuoc")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.ThuocEntity", "Thuoc")
                        .WithMany("CTMuaThuoc")
                        .HasForeignKey("MaThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", null)
                        .WithMany("CTMuaThuoc")
                        .HasForeignKey("NhanVienEntityId");

                    b.Navigation("HoaDon");

                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTNhapThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhapThietBiYTeEntity", "NhapThietBiYTe")
                        .WithMany("CTNhapThietBiYTe")
                        .HasForeignKey("MaNhapThietBiYTe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.ThietBiYTeEntity", "ThietBiYTe")
                        .WithMany("CTNhapThietBiYTe")
                        .HasForeignKey("MaThietBiYTe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhapThietBiYTe");

                    b.Navigation("ThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTNhapThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhapThuocEntity", "NhapThuoc")
                        .WithMany("CTNhapThuoc")
                        .HasForeignKey("MaNhapThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.ThuocEntity", "Thuoc")
                        .WithMany("CTNhapThuoc")
                        .HasForeignKey("MaThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhapThuoc");

                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTXuatThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.ThietBiYTeEntity", "ThietBiYTe")
                        .WithMany("CTXuatThietBiYTe")
                        .HasForeignKey("MaThietBiYTe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.XuatThietBiYTeEntity", "XuatThietBiYTe")
                        .WithMany("CTXuatThietBiYTe")
                        .HasForeignKey("MaXuatThietBiYTe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThietBiYTe");

                    b.Navigation("XuatThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.CTXuatThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.ThuocEntity", "Thuoc")
                        .WithMany("CTXuatThuoc")
                        .HasForeignKey("MaThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.XuatThuocEntity", "XuatThuoc")
                        .WithMany("CTXuatThuoc")
                        .HasForeignKey("MaXuatThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Thuoc");

                    b.Navigation("XuatThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.DanhGiaEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.KetQuaDichVuEntity", "KetQuaDichVu")
                        .WithMany("DanhGia")
                        .HasForeignKey("MaKetQuaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KetQuaDichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.DichVuEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.ChuyenKhoaEntity", "ChuyenKhoa")
                        .WithMany("DichVu")
                        .HasForeignKey("MaChuyenKhoa");

                    b.HasOne("Backend_DV_YTe.Entity.LoaiDichVuEntity", "LoaiDichVu")
                        .WithMany("DichVu")
                        .HasForeignKey("MaLoaiDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuyenKhoa");

                    b.Navigation("LoaiDichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.HoaDonEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.KhachHangEntity", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.KetQuaDichVuEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.LichHenEntity", "LichHen")
                        .WithMany("KetQuaDichVu")
                        .HasForeignKey("MaLichHen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", "NhanVien")
                        .WithMany("KetQuaDV")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichHen");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LichHenEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.BacSiEntity", "BacSi")
                        .WithMany("LichHen")
                        .HasForeignKey("MaBacSi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.DichVuEntity", "DichVu")
                        .WithMany("LichHen")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.KhachHangEntity", "KhachHang")
                        .WithMany("LichHen")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("DichVu");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhaCungCapEntity", "NhaCungCap")
                        .WithMany("NhapThietBiYTe")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", "NhanVien")
                        .WithMany("NhapThietBiYTe")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhaCungCapEntity", "NhaCungCap")
                        .WithMany("NhapThuoc")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", "NhanVien")
                        .WithMany("NhapThuoc")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThanhToanDVEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.LichHenEntity", "LichHen")
                        .WithMany("ThanhToanDV")
                        .HasForeignKey("MaLichHen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichHen");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.LoaiThietBiEntity", "LoaiThietBi")
                        .WithMany("ThietBiYTe")
                        .HasForeignKey("MaLoaiThietBi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiThietBi");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.LoaiThuocEntity", "LoaiThuoc")
                        .WithMany("Thuoc")
                        .HasForeignKey("MaLoaiThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThietBiYTeEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", "NhanVien")
                        .WithMany("XuatThietBiYTe")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThuocEntity", b =>
                {
                    b.HasOne("Backend_DV_YTe.Entity.NhanVienEntity", "NhanVien")
                        .WithMany("XuatThuoc")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.BacSiEntity", b =>
                {
                    b.Navigation("BacSi");

                    b.Navigation("LichHen");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ChuyenKhoaEntity", b =>
                {
                    b.Navigation("CTBacSi");

                    b.Navigation("DichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.DichVuEntity", b =>
                {
                    b.Navigation("LichHen");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.HoaDonEntity", b =>
                {
                    b.Navigation("CTMuaThietBiYTe");

                    b.Navigation("CTMuaThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.KetQuaDichVuEntity", b =>
                {
                    b.Navigation("DanhGia");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.KhachHangEntity", b =>
                {
                    b.Navigation("LichHen");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LichHenEntity", b =>
                {
                    b.Navigation("KetQuaDichVu");

                    b.Navigation("ThanhToanDV");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiDichVuEntity", b =>
                {
                    b.Navigation("DichVu");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiThietBiEntity", b =>
                {
                    b.Navigation("ThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.LoaiThuocEntity", b =>
                {
                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhaCungCapEntity", b =>
                {
                    b.Navigation("NhapThietBiYTe");

                    b.Navigation("NhapThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhanVienEntity", b =>
                {
                    b.Navigation("CTMuaThuoc");

                    b.Navigation("KetQuaDV");

                    b.Navigation("NhapThietBiYTe");

                    b.Navigation("NhapThuoc");

                    b.Navigation("XuatThietBiYTe");

                    b.Navigation("XuatThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThietBiYTeEntity", b =>
                {
                    b.Navigation("CTNhapThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.NhapThuocEntity", b =>
                {
                    b.Navigation("CTNhapThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThietBiYTeEntity", b =>
                {
                    b.Navigation("CTMuaThietBiYTe");

                    b.Navigation("CTNhapThietBiYTe");

                    b.Navigation("CTXuatThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.ThuocEntity", b =>
                {
                    b.Navigation("CTMuaThuoc");

                    b.Navigation("CTNhapThuoc");

                    b.Navigation("CTXuatThuoc");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThietBiYTeEntity", b =>
                {
                    b.Navigation("CTXuatThietBiYTe");
                });

            modelBuilder.Entity("Backend_DV_YTe.Entity.XuatThuocEntity", b =>
                {
                    b.Navigation("CTXuatThuoc");
                });
#pragma warning restore 612, 618
        }
    }
}
